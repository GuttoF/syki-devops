@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Syki.Front.Features.Adm.GetDomainEvent
@using Syki.Front.Features.Adm.GetCommandsSummary

@namespace Syki.Front.Pages.Adm

@page "/adm/commands/{id:guid}"
@attribute [Authorize(Roles = "Adm")]

<SykiPageTitle Title="Comandos" />

<MudContainer Class="my-4 px-4">
    <MudCard>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="12" sm="8" md="8" lg="8">
                    <MudStack Row="true" AlignItems="AlignItems.Center">
                        <MudIcon Icon="@Icons.Material.Filled.Task" Class="mb-1" Size="Size.Large"/>
                        <MudText Typo="Typo.h5" Class="mt-1" Style="font-weight: bold">@_data.Description</MudText>
                    </MudStack>
                </MudItem>
                <MudItem xs="12" sm="4" md="4" lg="4" Class="d-flex justify-end">
                    <MudChip
                        T="string"
                        Class="px-5 ma-0"
                        Size="Size.Large"
                        Icon="@_data.Status.GetIcon()"
                        Color="@_data.Status.GetColor()"
                        IconColor="Color.Default"
                    >
                        @_data.Status.GetDescription()
                    </MudChip>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>

    <MudContainer Class="px-0 my-4">
        <MudGrid Spacing="2">
            <MudItem xs="12" sm="4" md="4" lg="4">
                <InfoCard Icon="@Icons.Material.Filled.AccessTime" Color="@Colors.BlueGray.Lighten4" Title="Criação" Content="@_data.CreatedAt.ToMinuteString()" />
            </MudItem>
            <MudItem xs="12" sm="4" md="4" lg="4">
                <InfoCard Icon="@Icons.Material.Filled.AccessTimeFilled" Color="@GetProcessedAtIconColor()" Title="Processamento" Content="@_data.ProcessedAt.ToMinuteString()" />
            </MudItem>
            <MudItem xs="12" sm="4" md="4" lg="4">
                <InfoCard Icon="@Icons.Material.Filled.Timer" Color="@Colors.Indigo.Darken1" Title="Duração (ms)" Content="@_data.Duration.ToThousandSeparated()" />
            </MudItem>
            @if (_data.Error.HasValue())
            {
                <MudItem xs="12" sm="12" md="12" lg="12">
                    <InfoCard Icon="@Icons.Material.Filled.Error" Color="@Colors.Red.Darken1" Title="Erro" Content="@_data.Error" />
                </MudItem>
            }
            @if (_data.ParentId != null)
            {
                <MudItem xs="12" sm="12" md="12" lg="12">
                    <InfoCard Icon="@Icons.Material.Filled.TripOrigin" Color="@Colors.Orange.Darken1" Title="Comando original">
                        <MudLink Href="@($"/adm/commands/{@_data.ParentId}")" Target="_blank" Color="Color.Primary">Este comando foi originado de um reprocessamento.</MudLink>
                    </InfoCard>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>

    @if (_data.ParentId == null)
    {
        <style>
            .mud-table-toolbar {
                height: auto;
            }
        </style>
        <MudContainer Class="px-0 my-4">
            <MudTable
                Class="mb-4"
                Dense="true"
                Hover="true"
                RowsPerPage="10"
                Loading="@_loading"
                Items="@_data.Commands"
                T="CommandOut"
                Breakpoint="Breakpoint.Sm"
            >
                <ToolBarContent>
                    <MudStack Row="true" AlignItems="AlignItems.Center" Class="my-4 ml-1 mr-2" Style="width: 100%">
                        <MudItem xs="12" sm="8" md="8" lg="8">
                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                <MudIcon Icon="@Icons.Material.Filled.Task" Class="mb-1" Size="Size.Medium"/>
                                <MudText Typo="Typo.h6" Style="font-weight: bold">Reprocessamentos</MudText>
                            </MudStack>
                        </MudItem>
                        <MudItem xs="12" sm="4" md="4" lg="4" Class="d-flex justify-end">
                            <MudButton
                                OnClick="@Reprocess"
                                Size="Size.Medium"
                                Color="Color.Primary"
                                IconSize="Size.Medium"
                                Variant="Variant.Filled"
                                Disabled="@_disableButton"
                                StartIcon="@Icons.Material.Outlined.Autorenew"
                            >
                                Reprocessar
                            </MudButton>
                        </MudItem>
                    </MudStack>
                </ToolBarContent>

                <HeaderContent>
                    <MudTh>Tipo</MudTh>
                    <MudTh>Criação</MudTh>
                    <MudTh>Processamento</MudTh>
                    <MudTh>Duração (ms)</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Tipo">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                            <MudIcon Icon="@context.Status.GetIcon()" Color="@context.Status.GetColor()" Size="Size.Small" />
                            <MudText Typo="Typo.body2">@context.Description</MudText>
                        </MudStack>
                    </MudTd>
                    <MudTd DataLabel="Criação">@context.CreatedAt.ToMinuteString()</MudTd>
                    <MudTd DataLabel="Processamento">@context.ProcessedAt.ToMinuteString()</MudTd>
                    <MudTd DataLabel="Duração (ms)">@context.Duration.ToThousandSeparated()</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    @(GetNotFoundMessage())
                </NoRecordsContent>
            </MudTable>
        </MudContainer>
    }
</MudContainer>

@inject GetCommandClient GetCommandClient
@inject ReprocessCommandClient ReprocessCommandClient

@code
{
	[Parameter]
	public Guid Id { get; set; }

    private bool _loading;
    private bool _disableButton;
    private CommandOut _data = new();

    private string GetProcessedAtIconColor()
    {
        return _data.ProcessedAt == null ? Colors.BlueGray.Lighten4 : Colors.Green.Darken1;
    }

    private string GetIdentedData()
    {
        return _data.Data.HasValue() ? JValue.Parse(_data.Data).ToString(Formatting.Indented) : "";
    }

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _data = await GetCommandClient.Get(Id);
        _loading = false;
    }

    private string GetNotFoundMessage()
    {
        return "Este comando não possui reprocessamentos.";
    }

    private async Task Reprocess()
    {
        _disableButton = true;
        await ReprocessCommandClient.Reprocess(Id);
        _loading = true;
        _data = await GetCommandClient.Get(Id);
        _loading = false;
        _disableButton = false;
    }
}
