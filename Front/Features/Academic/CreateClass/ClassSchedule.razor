@namespace Syki.Front.Features.Academic.CreateClass

<MudStack Row="true" Class="mb-2">
    <MudItem xs="5">
        <MudSelect
            Dense="true"
            Margin="Margin.Dense"
            Class="py-0 my-0"
            Variant="Variant.Outlined"
            T="Day?"
            @bind-Value="@Data.Day"
            Label="Day"
            Required="true"
            RequiredError="Informe!"
            AdornmentColor="Color.Primary"
        >
            @foreach (Day? day in Enum.GetValues<Day>())
            {
                <MudSelectItem Value="@day">@day.GetDescription()</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="3">
        <MudSelect
            Dense="true"
            Margin="Margin.Dense"
            Class="py-0 my-0"
            Variant="Variant.Outlined"
            T="Hour?"
            @bind-Value="@Data.Start"
            Label="InÃ­cio"
            Required="true"
            RequiredError="Informe!"
            AdornmentColor="Color.Primary"
        >
            @foreach (Hour? hour in Enum.GetValues<Hour>())
            {
                <MudSelectItem Value="@hour">@hour.GetDescription()</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="3">
        <MudSelect
            Dense="true"
            Margin="Margin.Dense"
            Class="py-0 my-0"
            Variant="Variant.Outlined"
            T="Hour?"
            @bind-Value="@Data.End"
            Label="Fim"
            Required="true"
            RequiredError="Informe!"
            AdornmentColor="Color.Primary"
        >
            @foreach (Hour? hour in Enum.GetValues<Hour>())
            {
                if (Data.Start == null || hour <= Data.Start) continue;
                <MudSelectItem Value="@hour">@hour.GetDescription()</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="1">
        <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" OnClick="@HandleDeleteClick" />
    </MudItem>
</MudStack>

@code
{
    [Parameter]
    public ScheduleInFillable Data { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDeleteClick { get; set; }

    private async Task HandleDeleteClick()
    {
        await OnDeleteClick.InvokeAsync(Data.Id);
    }
}
