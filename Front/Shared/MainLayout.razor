@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="false" />
<MudDialogProvider CloseOnEscapeKey="true" CloseButton="true"/>
<MudSnackbarProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1" Dense="true">
                <MudButton
                    Href="/" Target="_self"
                    StartIcon="@Icons.Material.Filled.Games"
                    IconSize="Size.Large"
                    Variant="Variant.Text"
                    Style="color: white;"
                >
                    Syki
                </MudButton>
                <MudSpacer />
                <MudText>@_userName</MudText>
                <MudSpacer />

                <style>.mud-list-item-icon { min-width: 35px !important; }</style>
                <MudTooltip Text="Configs">
                    <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Dense="true" AnchorOrigin="Origin.BottomCenter" TransformOrigin="@Origin.BottomCenter">
                        <MudMenuItem IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.AccountCircle">Account</MudMenuItem>
                        <MudMenuItem IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.FilterAlt">Preferences</MudMenuItem>
                        <MudMenuItem Href="mfa-setup" IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.ScreenLockPortrait">2FA setup</MudMenuItem>
                        <MudMenuItem IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.Help">Help</MudMenuItem>
                    </MudMenu>
                </MudTooltip>

                <MudTooltip Text="Sair">
                    <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="Logout" />
                </MudTooltip>
            </MudAppBar>
            <MudDrawer Open="true" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <CascadingValue Value="@AppState">
                    @Body
                </CascadingValue>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        @if (Nav.Uri.ToLower().Contains("login") || Nav.Uri.ToLower().Contains("register"))
        {
            <MudLayout>
                <MudMainContent>
                    <CascadingValue Value="@AppState">
                        @Body
                    </CascadingValue>
                </MudMainContent>
            </MudLayout>
        }
        else
        {
            <SykiRedirect />
        }
    </NotAuthorized>
</AuthorizeView>

@inject NavigationManager Nav
@inject AuthService AuthService

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    public AppState AppState = new AppState();

    private string _userName = "";

    protected override async Task OnInitializedAsync()
    {
        await SetUserName();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        await SetUserName();
    }

    private async Task SetUserName()
    {
        var state = await AuthState;

        var claim = state.User.FindFirst("name");
        if (claim != null)
        {
            _userName = claim.Value;
        }
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        Nav.NavigateTo("/login");
    }
}
