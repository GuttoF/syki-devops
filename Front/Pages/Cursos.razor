@page "/cursos"

<PageTitle>Cursos</PageTitle>

<MudContainer>
    <MudCard Class="mt-8 mb-4 mx-6 px-2">
        <MudCardContent>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.Class" Class="mr-1 mb-1" Size="Size.Large"/>
                <MudText Typo="Typo.h5" Style="font-weight: bold">Cursos</MudText>
                <MudSpacer />
                <MudButton
                    StartIcon="@Icons.Material.Outlined.Add"
                    IconSize="Size.Large"
                    Variant="Variant.Filled"
                    Style="height: 40px;"
                    Color="Color.Primary"
                    @onclick="OpenDialog"
                >
                    Novo Curso
                </MudButton>
            </MudStack>
        </MudCardContent>
    </MudCard>

    <MudAlert Class="mt-4 mb-4 mx-6 pl-6" Severity="Severity.Normal" Variant="Variant.Text">
        <MudText>Note que um mesmo curso pode ser ofertado em mais de um campus.</MudText>
    </MudAlert>

    <MudContainer Class="mb-8">
        <MudDataGrid Class="pa-4" Items="@_cursos" QuickFilter="@_quickFilter" Hover="true" Loading="_loading" RowsPerPage="8">
            <ToolBarContent>
                <MudSpacer />
                <MudSpacer />
                <MudTextField
                    Margin="Margin.Dense"
                    Variant="Variant.Outlined"
                    @bind-Value="_searchString"
                    Placeholder="Busque por nome ou tipo"
                    Adornment="Adornment.Start"
                    Immediate="true"
                    AdornmentIcon="@Icons.Material.Filled.Search"
                    IconSize="Size.Medium"
                    Class="mt-0"
                />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Nome" Title="Nome" />
                <PropertyColumn Property="x => x.Tipo.GetDescription()" Title="Tipo" />
            </Columns>

            <NoRecordsContent>
                Não existem cursos cadastrados ainda.
            </NoRecordsContent>

            <PagerContent>
                <MudDataGridPager T="CursoOut" RowsPerPageString="Linhas por página:" InfoFormat="{first_item}-{last_item} de {all_items}" />
            </PagerContent>
        </MudDataGrid>
    </MudContainer>
</MudContainer>

@using Syki.Dtos
@inject HttpClient Http
@inject IDialogService DialogService

@code {
    private bool _loading;
    private string _searchString;
    private List<CursoOut> _cursos = new();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _cursos = await Http.GetFromJsonAsync<List<CursoOut>>("/cursos") ?? new();
        _loading = false;
    }

    private Func<CursoOut, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.Nome.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.Tipo.GetDescription().ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    private async Task OpenDialog()
    {
        var options = new DialogOptions {
            MaxWidth = MaxWidth.Small,
            FullWidth = true
        };
        var dialog = await DialogService.ShowAsync<NewCursoDialog>("", options);

        var result = await dialog.Result;

        if (result.Canceled) return;
        
        await OnInitializedAsync();
    }
}
