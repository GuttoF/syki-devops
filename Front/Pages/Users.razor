@using Front.Components.Custom

@page "/users"
@attribute [Authorize(Roles = "Adm")]

<PageTitle>Usuários</PageTitle>

<MudContainer>
    <SykiPageHeader Icon="@Icons.Material.Filled.People" Title="Usuários" />

    <MudAlert Class="mt-4 mb-4 mx-6 pl-6" Severity="Severity.Normal" Variant="Variant.Text" Elevation="1">
        <MudText>Um usuário necessariamente precisa estar vinculado à uma faculdade.</MudText>
    </MudAlert>

    <MudContainer Class="mb-8">
        <MudDataGrid Class="pa-4" Items="@_users" QuickFilter="@_quickFilter" Hover="true" Loading="_loading" Dense="true" RowsPerPage="10">
            <ToolBarContent>
                <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque pelo nome" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Id" Title="Id" />
                <PropertyColumn Property="x => x.Nome" Title="Nome" />
                <PropertyColumn Property="x => x.Email" Title="Email" />
                <PropertyColumn Property="x => x.Faculdade" Title="Faculdade" />
                <PropertyColumn Property="x => x.Role" Title="Role" />
            </Columns>

            <NoRecordsContent>
                @(GetNotFoundMessage())
            </NoRecordsContent>

            <PagerContent>
                <MudDataGridPager T="CreateUserOut" RowsPerPageString="Linhas por página:" InfoFormat="{first_item}-{last_item} de {all_items}" />
            </PagerContent>
        </MudDataGrid>
    </MudContainer>
</MudContainer>

@inject HttpClient Http
@inject IDialogService DialogService

@code
{
    private bool _loading;
    private string _searchString;
    private List<CreateUserOut> _users = [];

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _users = await Http.GetFromJsonAsync<List<CreateUserOut>>("/users") ?? [];
        _loading = false;
    }

    private Func<CreateUserOut, bool> _quickFilter => x => _searchString.IsIn(x.Nome);

    private string GetNotFoundMessage()
    {
        return (_searchString.IsEmpty()) ? "Não existem usuários cadastrados ainda." : "Nenhum usuário encontrado.";
    }
}
