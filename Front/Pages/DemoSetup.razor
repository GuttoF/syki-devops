@page "/demo-setup"

<PageTitle>Demo setup</PageTitle>

<MudContainer Class="mt-8 mb-8" Style="width: 480px">
    <MudOverlay @bind-Visible="@_loading" LightBackground="true" Absolute="false">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large" />
    </MudOverlay>
    <MudForm @ref="_form">
        <MudCard Class="px-16 pt-16 pb-8">
            <MudCardMedia Image="syki_logo.png" Height="120" Class="rounded" />
            @if (_saved)
            {
                <MudStack AlignItems="AlignItems.Center">
                    <MudAlert NoIcon="true" Class="mt-6" Severity="Severity.Success" Variant="Variant.Text" ContentAlignment="HorizontalAlignment.Center" Elevation="1">
                        <MudText>Pronto! Agora é só logar para iniciar a demo.</MudText>
                    </MudAlert>
                    <MudButton
                        Size="Size.Large"
                        OnClick="GoToLogin"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="mx-auto my-4 px-12"
                    >
                        Ir pro login
                    </MudButton>
                </MudStack>
            }
            else
            {
                <MudCardContent Class="mt-4 pb-2 px-0">
                    <PasswordTextField Value="@_data.Password" ValueChanged="HandlePasswordChange" OnKeyDown="Submit" Required="false" />
                </MudCardContent>
                <PasswordRequerimentsCard @bind-Validation="_data.Validation" />
                <MudCardActions>
                    <MudButton
                        Size="Size.Large"
                        OnClick="Submit"
                        Disabled="@(!_data.IsValid())"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="mx-auto mb-4 px-12"
                    >
                        SALVAR
                    </MudButton>
                </MudCardActions>
            }
        </MudCard>
    </MudForm>
</MudContainer>

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager Nav

@code
{
    [Parameter]
    [SupplyParameterFromQuery]
    public string Token { get; set; }

    private bool _saved;
    private bool _loading;
    private MudForm _form;
    SetupDemoIn _data = new();

    private void HandlePasswordChange(string newValue)
    {
        _data.Password = newValue;
        _data.Validate();
    }

    private void GoToLogin()
    {
        Nav.NavigateTo("/login");
    }

    private async Task Submit()
    {
        _data.Token = Token;

        _loading = true;
        var response = await Http.PostAsJsonAsync("/demos/setup", _data);
        if (response.IsSuccessStatusCode)
        {
            _saved = true;
        }
        else
        {
            var error = await response.ToError();
            Snackbar.Add(error.Message, Severity.Error);
        }
        _loading = false;
    }
}
