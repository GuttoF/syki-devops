services:
  db:
    image: 'postgres:latest'
    container_name: db
    hostname: db_host
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    networks:
      - sykinet
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: ["postgres","-c","max_connections=1500","-c","max_prepared_transactions=64","-c","log_statement=all"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d syki-db -h localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  back:
    container_name: back
    build:
      context: .
      dockerfile: Dockerfile.back
    depends_on:
      db:
        condition: service_healthy
    environment:
      - 'ASPNETCORE_URLS=http://+:5001'
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'Database__Reset=true'
      - 'Database__ConnectionString=UserID=postgres;Password=postgres;Host=db_host;Port=5432;Database=syki-db;Pooling=true;'
      - 'OTEL_EXPORTER_OTLP_PROTOCOL=grpc'
      - 'OTEL_EXPORTER_OTLP_ENDPOINT=http://datadog:4317'
    ports:
      - '5001:5001'
    networks:
      - sykinet

  front:
    container_name: front
    build:
      context: .
      dockerfile: Dockerfile.front
    depends_on:
      - back
    ports:
      - '5002:80'
    networks:
      - sykinet

  daemon:
    container_name: daemon
    build:
      context: .
      dockerfile: Dockerfile.daemon
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - 'ASPNETCORE_URLS=http://+:5003'
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'Database__ConnectionString=UserID=postgres;Password=postgres;Host=db_host;Port=5432;Database=syki-db;Pooling=true;Keepalive=60;'
    ports:
      - '5003:5003'
    networks:
      - sykinet

  # datadog:
  #   container_name: datadog
  #   image: 'gcr.io/datadoghq/agent:latest'
  #   pid: host
  #   ports:
  #     - '8126:8126'
  #     - '4317:4317'
  #     - '4318:4318'
  #   networks:
  #     - sykinet
  #   environment:
  #     - 'DD_API_KEY=lalala'
  #     - 'DD_HOSTNAME=datadog'
  #     - 'DD_SITE=us5.datadoghq.com'
  #     - 'DD_APM_NON_LOCAL_TRAFFIC=true'
  #     - 'DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT=0.0.0.0:4317'
  #     - 'DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_HTTP_ENDPOINT=0.0.0.0:4318'

networks:
  sykinet:
    driver: bridge

volumes:
  pgdata:
