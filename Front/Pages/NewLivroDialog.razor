<MudDialog Class="pb-2">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1 mb-n1" />
            Novo Livro
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form">
            <MudTextField
                OnlyValidateIfDirty="true"
                Immediate="true"
                Margin="Margin.Dense"
                Variant="Variant.Outlined"
                Class="mb-4"
                AutoFocus="true"
                @bind-Value="data.Titulo"
                T="String"
                Label="Titulo"
                Required="true"
                RequiredError="Informe o tÃ­tulo do livro!"
            />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <DialogCancelButton OnClick="Cancel" />
        <MudSpacer />
        <DialogSaveButton OnClick="Submit" />
    </DialogActions>
</MudDialog>

@inject HttpClient Http
@inject ISnackbar Snackbar

@code {
    private MudForm _form;

    private LivroIn data = new();

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    async Task Submit()
    {
        await _form.Validate();
        if (!_form.IsValid) return;

        await Http.PostAsJsonAsync("/livros", data);

        MudDialog.Close(DialogResult.Ok(true));

        Snackbar.Add("Livro cadastrado com sucesso!", Severity.Success);
    }

    void Cancel() => MudDialog.Cancel();
}
