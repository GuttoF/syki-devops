@page "/demo-setup"

<PageTitle>Demo setup</PageTitle>

<MudContainer Class="mt-16 mb-8" Style="width: 460px">
    <MudOverlay @bind-Visible="@_loading" LightBackground="true" Absolute="false">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large" />
    </MudOverlay>
    <MudForm @ref="_form">
        <MudCard Class="px-16 pt-16 pb-8">
            <MudCardMedia Image="syki_logo.png" Height="120" Class="rounded" />
            <MudAlert NoIcon="true" Class="mt-6" Severity="Severity.Info" Variant="Variant.Text" ContentAlignment="HorizontalAlignment.Center" Elevation="1">
                <MudText>Sua senha deve conter:</MudText>
                <MudText>• números</MudText>
                <MudText>• letras maiúsculas</MudText>
                <MudText>• letras minúsculas</MudText>
                <MudText>• caracteres não alfanuméricos</MudText>
            </MudAlert>
            <MudCardContent Class="mt-4">
                <PasswordTextField @bind-Value="_model.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton
                    Size="Size.Large"
                    OnClick="OnClick"
                    Variant="Variant.Filled"
                    Color="Color.Primary"
                    Class="mx-auto mb-4 px-12"
                >
                    SALVAR
                </MudButton>
            </MudCardActions>
        </MudCard>
    </MudForm>
</MudContainer>

@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager Nav

@code
{
    [Parameter]
    [SupplyParameterFromQuery]
    public string Token { get; set; }

    private bool _loading;
    private MudForm _form;
    DemoSetupIn _model = new();

    private async Task OnClick()
    {
        // TODO: colocar um check a cada criterio da senha satisfeito
        await _form.Validate();
        if (!_form.IsValid) return;

        _model.Token = Token;

        _loading = true;
        var response = await Http.PostAsJsonAsync("/demos/setup", _model);
        if (response.IsSuccessStatusCode)
        {
            // TODO: Colocar botao "Realizar Login" e confirmacao q deu certo, ao inves de redirecionar direto
            Nav.NavigateTo("/login");
        }
        else
        {
            var error = await response.ToError();
            Snackbar.Add(error.Message, Severity.Error);
        }
        _loading = false;
    }
}
