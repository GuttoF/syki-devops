@namespace Syki.Front.Pages.Adm

@page "/adm/users"
@attribute [Authorize(Roles = "Adm")]

<SykiPageTitle Title="Usuários" />

<MudContainer Class="my-4 px-4">
    <SykiPageHeader Icon="@Icons.Material.Filled.People" Title="Usuários" />
    <MudContainer Class="px-0 my-4">
        <MudDataGrid Class="pa-4" Items="@_users" QuickFilter="@_quickFilter" Hover="true" Loading="@_loading" Dense="true" RowsPerPage="10">
            <ToolBarContent>
                <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por qualquer atributo" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Name" Title="Nome" />
                <PropertyColumn Property="x => x.Email" Title="Email" />
                <PropertyColumn Property="x => x.Institution" Title="Instituição" />
                <PropertyColumn Property="x => x.Role" Title="Role" />
            </Columns>
            <NoRecordsContent>
                @(GetNotFoundMessage())
            </NoRecordsContent>
            <PagerContent>
                <SykiDataGridPager T="UserOut" />
            </PagerContent>
        </MudDataGrid>
    </MudContainer>
</MudContainer>

@inject GetUsersClient GetUsersClient

@code
{
    private bool _loading;
    private string _searchString;
    private List<UserOut> _users = [];

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _users = await GetUsersClient.Get();
        _loading = false;
    }

    private Func<UserOut, bool> _quickFilter => x => _searchString.IsIn(x.Name, x.Email, x.Institution, x.Role);

    private string GetNotFoundMessage()
    {
        return (_searchString.IsEmpty()) ? "Não existem usuários cadastrados ainda." : "Nenhum usuário encontrado.";
    }
}
