@using Syki.Front.Components.Custom

@namespace Syki.Front.Features.Academic.GetDisciplines

<MudContainer Class="mb-8">
    <MudDataGrid Class="pa-4" Items="@_disciplines" QuickFilter="@_quickFilter" Hover="true" Loading="@_loading" Dense="true" RowsPerPage="10">
        <ToolBarContent>
            <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por name ou código" />
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.Name" Title="Name" />
            <PropertyColumn Property="x => x.Code" Title="Código" />
        </Columns>
        <NoRecordsContent>
            @(GetNotFoundMessage())
        </NoRecordsContent>
        <PagerContent>
            <SykiDataGridPager T="DisciplineOut" />
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@inject GetDisciplinesClient Client

@code
{
    private bool _loading;
    private string _searchString;
    private List<DisciplineOut> _disciplines = [];

    public async Task Reload()
    {
        _loading = true;
        _disciplines = await Client.Get();
        _loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Reload();
    }

    private Func<DisciplineOut, bool> _quickFilter => x => _searchString.IsIn(x.Name, x.Code);

    private string GetNotFoundMessage()
    {
        return (_searchString.IsEmpty()) ? "Não existem disciplinas cadastradas ainda." : "Nenhuma disciplina encontrada.";
    }
}
