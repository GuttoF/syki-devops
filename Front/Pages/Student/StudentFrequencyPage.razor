@namespace Syki.Front.Pages.Student

@page "/student/frequency"
@attribute [Authorize(Roles = "Student")]

<SykiPageTitle Title="Frequência" />

<MudContainer Class="my-4 px-4">
    <SykiPageHeader Icon="@Icons.Material.Filled.Class" Title="Frequência" />
    <MudAlert Class="my-4 pl-6" NoIcon="true" Severity="Severity.Normal" Variant="Variant.Text" Elevation="1">
        <MudText>A frequência mínima para ser aprovado é <b>70.00%</b></MudText>
    </MudAlert>
    <MudContainer Class="px-0">
        <MudCard>
            <MudCardContent Class="px-6">
                @if (_loading)
                {
                    <MudProgressLinear Color="Color.Info" Indeterminate="true" />
                }
                else
                {
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudProgressLinear Color="@GetFrequencyColor(_student.Frequency)" Rounded="true" Size="Size.Large" Value="@decimal.ToDouble(_student.Frequency)" Style="height: 24px">
                            <MudText Typo="Typo.body1">
                                <b>@GetFrequency()</b>
                            </MudText>
                            <MudText Typo="Typo.h4" Class="mx-2">
                                <b> · </b>
                            </MudText>
                            <MudText Typo="Typo.body1">
                                <b>@_student.Frequency.Format()%</b>
                            </MudText>
                        </MudProgressLinear>
                        <MudTooltip Text="Total de presenças durante todo o curso" Arrow="true" Placement="Placement.Bottom">
                            <MudIconButton Icon="@Icons.Material.Filled.Info" Size="Size.Small" />
                        </MudTooltip>
                    </MudStack>
                }
            </MudCardContent>
        </MudCard>
    </MudContainer>
    <MudContainer Class="px-0 my-4">
        <MudContainer Class="px-0 mb-4">
            <MudTable
                T="GetStudentFrequenciesOut"
                Items="@_frequencies"
                Class="pa-4"
                Breakpoint="Breakpoint.Sm"
                Dense="true"
                Hover="true"
                Filter="@_quickFilter"
                Loading="@_loading"
                RowsPerPage="100"
            >
                <ToolBarContent>
                    <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por disciplina"/>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Disciplina</MudTh>
                    <MudTh>Período</MudTh>
                    <MudTh>Status</MudTh>
                    <MudTh>Aulas</MudTh>
                    <MudTh>Frequência</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Disciplina">@context.Name</MudTd>
                    <MudTd DataLabel="Período">@context.Period</MudTd>
                    <MudTd DataLabel="Status">@context.Status.GetDescription()</MudTd>
                    <MudTd DataLabel="Aulas">@context.GetFormated()</MudTd>
                    <MudTd DataLabel="Frequência">
                        <MudProgressLinear Color="@GetFrequencyColor(context.GetPercentage())" Rounded="true" Size="Size.Large" Value="@decimal.ToDouble(context.GetPercentage())" Style="height: 24px">
                            <MudText Typo="Typo.body1">
                                <b>@context.GetPercentage().Format()%</b>
                            </MudText>
                        </MudProgressLinear>
                    </MudTd>
                </RowTemplate>
                <LoadingContent>
                    @if (_breakpoint == Breakpoint.Xs)
                    {
                        <MudProgressLinear Color="Color.Info" Indeterminate="true"/>
                    }
                </LoadingContent>
            </MudTable>
        </MudContainer>
    </MudContainer>
</MudContainer>

@inject GetStudentFrequencyClient FrequencyClient
@inject GetStudentFrequenciesClient FrequenciesClient
@inject IBrowserViewportService BrowserViewportService

@code
{
    private bool _loading;
    private string _searchString;
    private Breakpoint _breakpoint;
    private GetStudentFrequencyOut _student = new();
    private List<GetStudentFrequenciesOut> _frequencies = [];
    
    private Func<GetStudentFrequenciesOut, bool> _quickFilter => x => _searchString.IsIn(x.Name);

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _breakpoint = await BrowserViewportService.GetCurrentBreakpointAsync();
        _student = await FrequencyClient.Get();
        var response = await FrequenciesClient.Get();
        if (response.IsSuccess()) _frequencies = response.GetSuccess();
        _loading = false;
    }

    private string GetFrequency()
    {
        return $"{_student.Presences} / {_student.Attendances}";
    }

    private Color GetFrequencyColor(decimal frequency)
    {
        return frequency >= 70 ? Color.Tertiary : Color.Error;
    }
}
