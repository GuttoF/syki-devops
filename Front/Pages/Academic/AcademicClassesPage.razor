@using Syki.Front.Features.Academic.CreateClass

@namespace Syki.Front.Pages.Academic

@page "/academic/classes"
@attribute [Authorize(Roles = "Academic")]

<MudContainer>
    <SykiPageHeader Icon="@Icons.Material.Filled.CenterFocusStrong" Title="Turmas" ButtonText="Nova Turma" OnClick="@OpenDialog"/>
    <SykiPageAlert Text="Em uma mesma turma podem estudar alunos de diferentes cursos." />
    <MudContainer Class="px-4 mb-8">
        <MudDataGrid Class="pa-4" Items="@_classes" QuickFilter="@_quickFilter" Hover="true" Loading="@_loading" Dense="true" RowsPerPage="10">
            <ToolBarContent>
                <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por disciplina, professor ou período" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Discipline" Title="Disciplina" />
                <PropertyColumn Property="x => x.Teacher" Title="Professor" />
                <PropertyColumn Property="x => x.Period" Title="Período" />
                <PropertyColumn Property="x => x.Vacancies" Title="Vagas" />
                <PropertyColumn Property="x => x.Status.GetDescription()" Title="Status" />
                <TemplateColumn>
                    <CellTemplate>
                        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.StickyNote2" OnClick="@(() => Action(context.Item))" />
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
            <NoRecordsContent>
                @(GetNotFoundMessage())
            </NoRecordsContent>
            <PagerContent>
                <SykiDataGridPager T="ClassOut" />
            </PagerContent>
        </MudDataGrid>
    </MudContainer>
</MudContainer>

<CreateClassDialog @ref="@_dialog" OnSuccess="@GoToClassPage" />

@inject NavigationManager Nav
@inject GetClassesClient GetClassesClient

@code
{
    private bool _loading;
    private string _searchString;
    private List<ClassOut> _classes = [];

    private CreateClassDialog _dialog;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _classes = await GetClassesClient.Get();
        _loading = false;
    }

    private void Action(ClassOut item)
    {
        GoToClassPage(item.Id);
    }

    private void GoToClassPage(Guid id)
    {
        Nav.NavigateTo($"/academic/classes/{id}");
    }

    private Func<ClassOut, bool> _quickFilter => x => _searchString.IsIn(x.Discipline, x.Teacher, x.Period);

    private void OpenDialog()
    {
        _dialog.Open();
    }

    private string GetNotFoundMessage()
    {
        return (_searchString.IsEmpty()) ? "Não existem turmas cadastradas ainda." : "Nenhuma turma encontrada.";
    }
}
