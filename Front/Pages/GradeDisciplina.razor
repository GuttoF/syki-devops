<MudForm @ref="form">
    <MudStack Row="true">
        <MudItem xs="6">
            <MudSelect
                Variant="Variant.Outlined" Value="@_disciplina"
                ValueChanged="(GradeDisciplinaFull newValue) => HandleDisciplinaChanged(newValue)"
                Label="Disciplina"
                Required="true" RequiredError="Informe a disciplina!" AdornmentColor="Color.Primary"
            >
                @foreach (GradeDisciplinaFull? item in Disciplinas)
                {
                    if (item.IsSelected && item.Id != _disciplina?.Id) continue;
                    <MudSelectItem Value="@item">@item.Nome</MudSelectItem>
                }
                @if(Curso == null)
                {
                    <MudSelectItem Value="@_disciplina" Disabled="true">Selecione o curso!</MudSelectItem>
                }
                @if(Curso != null && Disciplinas.Count == 0)
                {
                    <MudSelectItem Value="@_disciplina" Disabled="true">Este curso não possui disciplinas vinculadas.</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="2">
            <MudTextField
                Variant="Variant.Outlined"
                T="byte?"
                Value="@_periodo"
                ValueChanged="x => HandlePeriodoChanged(x)"
                Label="Período" Required="true" RequiredError="Informe o período!" />
        </MudItem>
        <MudItem xs="2">
            <MudTextField
                Variant="Variant.Outlined"
                T="byte?"
                Value="@_creditos"
                ValueChanged="x => HandleCreditosChanged(x)"
                Label="Créditos" Required="true" RequiredError="Informe os créditos!" />
        </MudItem>
        <MudItem xs="2">
            <MudTextField
                Variant="Variant.Outlined"
                T="ushort?"
                Value="@_cargaHoraria"
                ValueChanged="x => HandleCargaHorariaChanged(x)"
                Label="Carga Horária" Required="true" RequiredError="Informe a carga horária!" />
        </MudItem>
    </MudStack>
</MudForm>

@using Syki.Dtos
@using Front.Domain

@code {
    MudForm form;

    [CascadingParameter(Name = "Disciplinas")]
    public List<GradeDisciplinaFull> Disciplinas { get; set; }

    [CascadingParameter(Name = "Curso")]
    public CursoOut? Curso { get; set; }

    GradeDisciplinaFull? _disciplina;
    byte? _periodo;
    byte? _creditos;
    ushort? _cargaHoraria;

    void HandleDisciplinaChanged(GradeDisciplinaFull newValue)
    {
        if (_disciplina != null)
        {
            Disciplinas.First(d => d.Id == _disciplina.Id).IsSelected = false;
        }

        _cargaHoraria = newValue.CargaHoraria;
        Disciplinas.First(d => d.Id == newValue.Id).IsSelected = true;
        Disciplinas.First(d => d.Id == newValue.Id).Periodo = _periodo;
        Disciplinas.First(d => d.Id == newValue.Id).Creditos = _creditos;
        Disciplinas.First(d => d.Id == newValue.Id).CargaHoraria = _cargaHoraria;

        _disciplina = Disciplinas.First(d => d.Id == newValue.Id);
    }

    void HandlePeriodoChanged(byte? newValue)
    {
        _periodo = newValue;

        if (_disciplina == null) return;

        _disciplina.Periodo = _periodo;
        Disciplinas.First(d => d.Id == _disciplina.Id).Periodo = _periodo;
    }

    void HandleCreditosChanged(byte? newValue)
    {
        _creditos = newValue;

        if (_disciplina == null) return;

        _disciplina.Creditos = _creditos;
        Disciplinas.First(d => d.Id == _disciplina.Id).Creditos = _creditos;
    }

    void HandleCargaHorariaChanged(ushort? newValue)
    {
        _cargaHoraria = newValue;

        if (_disciplina == null) return;

        _disciplina.CargaHoraria = _cargaHoraria;
        Disciplinas.First(d => d.Id == _disciplina.Id).CargaHoraria = _cargaHoraria;
    }
}
