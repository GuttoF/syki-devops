@page "/login"

<PageTitle>Login</PageTitle>

<MudContainer Class="mt-16 mb-8" Style="width: 460px">
    <MudOverlay @bind-Visible="@_loading" LightBackground="true" Absolute="false">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large" />
    </MudOverlay>
    <MudForm @ref="_form">
        <MudCard Class="px-16 pt-16 pb-8">
            <MudCardMedia Image="syki_logo.png" Height="120" Class="rounded" />
            <MudCardContent>
                <MudTextField
                    InputType="InputType.Email"
                    Margin="Margin.Dense"
                    AutoFocus="true"
                    Label="Email"
                    Class="mt-3"
                    OnlyValidateIfDirty="true"
                    @bind-Value="_model.Email"
                    Variant="Variant.Outlined"
                    Required="true"
                    RequiredError="Informe!"
                />
                <PasswordTextField @bind-Value="_model.Password" />
            </MudCardContent>
            <MudCardActions Class="justify-center">
                <MudStack Spacing="1">
                    <MudButton
                        Size="Size.Large"
                        OnClick="OnClick"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="mx-auto mb-4 px-12"
                    >
                        Login
                    </MudButton>
                    <MudLink Href="/reset-password-token">Esqueci minha senha</MudLink>
                </MudStack>
            </MudCardActions>
        </MudCard>
    </MudForm>
</MudContainer>

@inject ISnackbar Snackbar
@inject LoginClient Client
@inject NavigationManager Nav

@code
{
    private bool _loading;
    private MudForm _form;
    LoginIn _model = new();

    private async Task OnClick()
    {
        await _form.Validate();
        if (!_form.IsValid) return;

        _loading = true;
        var result = await Client.Login(_model.Email, _model.Password);
        if (result.AccessToken != null)
        {
            Nav.NavigateTo("/");
        }
        else if (result.WrongEmailOrPassword)
        {
            Snackbar.Add("Email ou senha inválidos!", Severity.Error);
        }
        else if (result.RequiresTwoFactor)
        {
            Nav.NavigateTo("/login-mfa");
        }
        _loading = false;
    }
}
