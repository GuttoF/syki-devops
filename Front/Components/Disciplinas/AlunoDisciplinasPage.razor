@attribute [Authorize(Roles = "Aluno")]

<PageTitle>Disciplinas</PageTitle>

<MudContainer>
    <MudCard Class="mt-8 mb-4 mx-6 px-2">
        <MudCardContent>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.Apps" Class="mr-1 mb-1" Size="Size.Large"/>
                <MudText Typo="Typo.h5" Style="font-weight: bold">Disciplinas</MudText>
                <MudSpacer />
            </MudStack>
        </MudCardContent>
    </MudCard>

    <MudContainer Class="mb-8">
        <MudExpansionPanels MultiExpansion="true">
            @foreach(var periodo in _disciplinas.ConvertAll(d => d.Periodo).Distinct().Order())
            {
                <MudExpansionPanel IsInitiallyExpanded="@(periodo==1)">
                    <TitleContent>
                        <div class="d-flex">
                            <MudIcon Icon="@Icons.Material.Filled.ArrowRight" class="mr-3"></MudIcon>
                            <MudText><strong>@($"{periodo}º Período")</strong></MudText>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        <MudTable Items="@_disciplinas.Where(x => x.Periodo == periodo)" Breakpoint="Breakpoint.Sm" Dense="true">
                            <ColGroup>
                                <col style="width: 60%;" />
                                <col style="width: 20%;" />
                                <col style="width: 20%;" />
                            </ColGroup>

                            <HeaderContent>
                                <MudTh>Nome</MudTh>
                                <MudTh>Créditos</MudTh>
                                <MudTh>Carga Horária</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Nome">@context.Nome</MudTd>
                                <MudTd DataLabel="Créditos">@context.Creditos</MudTd>
                                <MudTd DataLabel="Carga Horária">@context.CargaHoraria</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </MudContainer>
</MudContainer>

@inject HttpClient Http
@inject IDialogService DialogService

@code
{
    private List<DisciplinaOut> _disciplinas = [];

    protected override async Task OnInitializedAsync()
    {
        _disciplinas = await Http.GetFromJsonAsync<List<DisciplinaOut>>("alunos/disciplinas") ?? [];
    }
}
