@inherits BunitTestContext

@code
{
    // [Test]
    public async Task Should_renders_the_academico_index_data()
    {
        // Arrange
        var response = new AcademicInsightsOut
        {
            Campus = 5,
            Cursos = 3,
            Disciplinas = 67,
            Grades = 8,
            Ofertas = 2,
            Turmas = 0,
            Professores = 5,
            Alunos = 45,
            Notifications = 96,
        };

        var mock = Services.AddMockHttpClient();
        mock.When(HttpMethod.Get, "/index/academico").RespondJson(response);

        // Act
        var cut = Render(@<IndexAcademico />);
        await Task.Delay(500);

        // Assert
        cut.Find("h4").TextContent.MarkupMatches("Insights");
        cut.Find("p").TextContent.MarkupMatches("Aqui você encontra dados consolidados sobre a sua faculdade, atualizados em tempo real!");
        var data = cut.FindAll("h5", true).ToList();
        data[0].TextContent.MarkupMatches("5 Campus");
        data[1].TextContent.MarkupMatches("3 Cursos");
        data[2].TextContent.MarkupMatches("67 Disciplinas");
        data[3].TextContent.MarkupMatches("8 Grades");
        data[4].TextContent.MarkupMatches("2 Ofertas");
        data[5].TextContent.MarkupMatches("0 Turmas");
        data[6].TextContent.MarkupMatches("5 Professores");
        data[7].TextContent.MarkupMatches("45 Alunos");
        data[8].TextContent.MarkupMatches("96 Notificações");
    }
}
