@namespace Syki.Front.Pages.Student

@page "/student/exam-grades"
@attribute [Authorize(Roles = "Student")]

<SykiPageTitle Title="Notas" />

<MudContainer Class="my-4 px-4">
    <SykiPageHeader Icon="@Icons.Material.Filled.StickyNote2" Title="Notas" />

    <MudContainer Class="px-0 pt-4">
        <MudCard>
            <MudCardContent Class="px-6">
                @if (_loading)
                {
                    <MudProgressLinear Color="Color.Info" Indeterminate="true" />
                }
                else
                {
                    <MudProgressLinear Color="@GetAverageNoteColor()" Max="10" Rounded="true" Size="Size.Large" Value="@decimal.ToDouble(_student.AverageNote)" Style="height: 24px">
                        <MudText Typo="Typo.body1">
                            <b>@_student.AverageNote.Format()</b>
                        </MudText>
                    </MudProgressLinear>
                }
            </MudCardContent>
        </MudCard>
    </MudContainer>

    <MudContainer Class="px-0 my-4">
        <MudContainer Class="px-0 mb-4">
            <MudTable
                T="StudentExamGradeOut"
                Items="@_disciplines"
                Breakpoint="Breakpoint.Sm"
                Dense="true"
                Class="pa-4"
                Hover="true"
                Filter="@_quickFilter"
                Loading="@_loading"
                RowsPerPage="100"
            >
                <ToolBarContent>
                    <SykiDataGridSearchTextField @bind-Value="@_searchString" Placeholder="Busque por nome ou status"/>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>Disciplina</MudTh>
                    <MudTh>Período</MudTh>
                    <MudTh>Status</MudTh>
                    <MudTh>N1</MudTh>
                    <MudTh>N2</MudTh>
                    <MudTh>N3</MudTh>
                    <MudTh>Média</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Disciplina">@context.Discipline</MudTd>
                    <MudTd DataLabel="Período">@context.Period</MudTd>
                    <MudTd DataLabel="Status">@context.StudentDisciplineStatus.GetDescription()</MudTd>
                    <MudTd DataLabel="N1">@context.GetNote(ExamType.N1)</MudTd>
                    <MudTd DataLabel="N2">@context.GetNote(ExamType.N2)</MudTd>
                    <MudTd DataLabel="N3">@context.GetNote(ExamType.N3)</MudTd>
                    <MudTd DataLabel="Média">@context.AverageNote.Format()</MudTd>
                </RowTemplate>
                <LoadingContent>
                    @if (_breakpoint == Breakpoint.Xs)
                    {
                        <MudProgressLinear Color="Color.Info" Indeterminate="true"/>
                    }
                </LoadingContent>
            </MudTable>
        </MudContainer>
    </MudContainer>
</MudContainer>

@inject IBrowserViewportService BrowserViewportService
@inject GetStudentAverageNoteClient AverageNotesClient
@inject GetStudentExamGradesClient StudentExamGradesClient

@code
{
    private bool _loading;
    private string _searchString;
    private Breakpoint _breakpoint;
    private GetStudentAverageNoteOut _student = new();
    private List<StudentExamGradeOut> _disciplines = [];

    private Func<StudentExamGradeOut, bool> _quickFilter => x => _searchString.IsIn(x.Discipline, x.StudentDisciplineStatus.ToString());
    
    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _breakpoint = await BrowserViewportService.GetCurrentBreakpointAsync();
        _disciplines = await StudentExamGradesClient.Get();
        _student = await AverageNotesClient.Get();
        _loading = false;
    }

    private Color GetAverageNoteColor()
    {
        return _student.AverageNote >= 7 ? Color.Tertiary : Color.Error;
    }
}
