<MudDialog>
    <DialogContent>
        <MudForm @ref="form">
            <MudTextField AutoFocus="true" @bind-Value="_nome" Label="Nome" Required="true" RequiredError="Informe o nome do curso!" />
            <MudSelect @bind-Value="data.Tipo" Label="Tipo" Required="true" RequiredError="Informe o tipo do curso!" AdornmentColor="Color.Primary">
                @foreach (TipoDeCurso item in Enum.GetValues(typeof(TipoDeCurso)))
                {
                    <MudSelectItem Value="@item">@item.GetDescription()</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Salvar</MudButton>
    </DialogActions>
</MudDialog>

@using Syki.Dtos
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject HttpClient httpClient
@inject ISnackbar Snackbar

@code {
    MudForm form;

    private string? _nome;

    private CursoIn data = new();

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    async Task Submit()
    {
        await form.Validate();
        if (!form.IsValid) return;

        data.Nome = _nome;
        await httpClient.PostAsJsonAsync("/cursos", data);

        MudDialog.Close(DialogResult.Ok(true));

        Snackbar.Add("Curso cadastrado com sucesso!", Severity.Success);
    }

    void Cancel() => MudDialog.Cancel();
}
