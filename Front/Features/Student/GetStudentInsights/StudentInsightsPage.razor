@namespace Syki.Front.Features.Student.GetStudentInsights

<MudContainer Class="mt-8 px-12">
    <MudText Typo="Typo.h4" Style="font-weight: bold" Class="ml-4">
        Olá, @_userName
    </MudText>
    <MudAlert Class="mt-4" Severity="Severity.Normal" Variant="Variant.Text" Elevation="1">
        <MudStack Row="true" Justify="Justify.SpaceAround">
            <MudText>Aqui você encontra dados consolidados sobre seu curso, atualizados em tempo real!</MudText>
        </MudStack>
    </MudAlert>
    <MudGrid Class="mt-4">
        <StudentInsightCard
            Icon="@Icons.Material.Filled.Person4"
            Title="Status"
            Text="@($"{_data.Status.GetDescription()}")"
            Loading="@_loading"
        />
        <StudentInsightCard
            Icon="@Icons.Material.Filled.CheckCircle"
            Title="Disciplinas concluídas"
            Text="@($"{_data.FinishedDisciplines} / {_data.TotalDisciplines}")"
            Loading="@_loading"
        />
        <StudentInsightCard
            Icon="@Icons.Material.Filled.GroupWork"
            Title="Média"
            Text="@($"{_data.Average.Format()}")"
            Loading="@_loading"
        />
        <StudentInsightCard
            Icon="@Icons.Material.Filled.Class"
            Title="Coeficiente de rendimento"
            Text="@($"{_data.CR.Format()}")"
            Loading="@_loading"
        />
    </MudGrid>
</MudContainer>

@inject GetStudentInsightsClient Client

@code
{
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    private bool _loading;
    private string _userName = "";
    private StudentInsightsOut _data = new();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        await SetUserName();
        _data = await Client.Get();
        _loading = false;
    }

    private async Task SetUserName()
    {
        var state = await AuthState;

        var claim = state.User.FindFirst("name");
        if (claim != null)
        {
            _userName = claim.Value;
        }
    }
}
